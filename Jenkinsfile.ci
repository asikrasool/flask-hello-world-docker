pipeline {
  environment {
    registry = "flaskapp"
    registryCredential = 'dockerhub'
  }
  agent any
  stages {
    stage('Cloning Git') {
      steps {
          checkout scm
        // checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '2ff6a9be-b5e7-43b8-b36d-9cbd9bfb2d9a', url: 'git@github.com:asikrasool/flask-hello-world-docker.git']]])
      }
    }
    stage('Try'){
        steps{
        sh 'whoami'
        sh 'ls'
    }
    }
    stage('Building image') {
      steps{
        script {
          docker.build registry+ ":latest"
        }
      }
    }
    stage('Docker Push') {
      steps{
        script {
          docker.withRegistry('https://343337789422.dkr.ecr.ap-south-1.amazonaws.com/flaskapp','ecr:ap-south-1:flask_app'){
    docker.image(registry).push('latest')
        }
      }
    }
  }
  stage('Deploy'){
      steps{
          sh 'bash ./deploy.sh'
//           script{
          
          
//           sh ''' # Create a new task definition for this build
// sed -e "s;%BUILD_NUMBER%;${BUILD_NUMBER};g" task-def-temp.json > task-def-temp.json-v_${BUILD_NUMBER}.json
// aws ecs register-task-definition --family flask-signup --cli-input-json file://task-def-temp.json-v_${BUILD_NUMBER}.json

// # Update the service with the new task definition and desired count
// TASK_REVISION=`aws ecs describe-task-definition --task-definition flask-signup | egrep "revision" | tr "/" " " | awk '{print $2}' | sed 's/"$//'`
// DESIRED_COUNT=`aws ecs describe-services --services ${SERVICE_NAME} | egrep "desiredCount" | tr "/" " " | awk '{print $2}' | sed 's/,$//'`
// if [ ${DESIRED_COUNT} = "0" ]; then
//     DESIRED_COUNT="1"
// fi

// aws ecs update-service --cluster default --service ${SERVICE_NAME} --task-definition ${TASK_FAMILY}:${TASK_REVISION} --desired-count ${DESIRED_COUNT}'''
           
//           } 
      }
  }
  }
   post {
    always {
      sh 'docker system prune -a'
    }
  }
}